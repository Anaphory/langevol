<!-- Build LANG_EVOL. It is also used by Hudson LANG_EVOL project. JUnit test is available for this build. -->
<project basedir="." default="build_jar_all_LANG_EVOL" name="BUILD_LANG_EVOL">
	<description>
	    Build LANG_EVOL. 
            Also used by Hudson LANG_EVOL project. 
	    JUnit test is available for this build.
	    $Id: build_LANG_EVOL.xml $
	</description>

	<!-- set global properties for this build -->
	<property name="srcLANG_EVOL" location="src" />
	<property name="buildLANG_EVOL" location="build" />
	<property name="libLANG_EVOL" location="lib" />
	<property name="release_dir" value="release" />
	<property name="distLANG_EVOL" location="${buildLANG_EVOL}/dist" />
	<property name="beast2path" location="../beast2" />
	<property name="libBeast2" location="${beast2path}/lib" />
	<property name="srcBeast2" location="${beast2path}/src" />
	<property name="beast2classpath" location="${beast2path}/build" />
	<property name="beastiipath" location="../beastii" />
	<property name="beastiiclasspath" location="${beastiipath}/build" />
	<property name="beastclassic-path" location="../beast-classic" />
	<property name="beastclassic-classpath" location="${beastclassic-path}/build" />
	<property name="Add_on_dir" value="${release_dir}/add-on" />
	<property name="version" value="1.1.0" />

    <import file="${beast2path}/build.xml" />

	<property name="main_class_BEAST" value="beast.app.BeastMCMC" />
	<property name="report" value="${buildLANG_EVOL}/junitreport"/>

	<path id="classpath">
        <pathelement path="${buildLANG_EVOL}"/>
		<fileset dir="${libBeast2}" includes="junit-4.8.2.jar"/>
		<fileset dir="${libBeast2}" includes="fest.jar"/>
		<fileset dir="${libBeast2}" includes="beagle.jar"/>
		<fileset dir="${libBeast2}" includes="jam.jar"/>
		<fileset dir="${libBeast2}" includes="colt.jar"/>
		<fileset dir="${libLANG_EVOL}" includes="mtj.jar"/>
        <pathelement path="${beast2classpath}"/>
        <pathelement path="${beastiiclasspath}"/>
        <pathelement path="${beastclassic-classpath}"/>
	</path>

	<!-- start -->
	<target name="initLANG_EVOL">
		<echo message="${ant.project.name}: ${ant.file}" />
	</target>

	<target name="cleanLANG_EVOL">
    	<delete dir="${buildLANG_EVOL}" />
	</target>

	<!-- clean previous build, and then compile Java source code, and Juint test -->
	<target name="build_all_LANG_EVOL" depends="cleanLANG_EVOL,compile-allLANG_EVOL,junitLANG_EVOL"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- clean previous build, compile Java source code, and Junit test, and make the beast.jar and beauti.jar -->
	<target name="build_jar_all_LANG_EVOL" depends="cleanLANG_EVOL,compile-allLANG_EVOL,junitLANG_EVOL,dist_all_LANG_EVOL"
        description="Clean and Build all run-time stuff">
	</target>


	<!-- No JUnit Test, clean previous build, compile Java source code, and make the LANG_EVOL.jar and beauti.jar -->
	<target name="build_jar_all_LANG_EVOL_NoJUnitTest" depends="cleanLANG_EVOL,compile-allLANG_EVOL,dist_all_LANG_EVOL"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- compile Java source code -->
	<target name="compile-allLANG_EVOL" depends="initLANG_EVOL,compile-all">


	    <!-- Capture the path as a delimited property using the refid attribute -->
	    <property name="myclasspath" refid="classpath"/>
	    <!-- Emit the property to the ant console -->
	    <echo message="Classpath = ${myclasspath}"/>

		<mkdir dir="${buildLANG_EVOL}" />

		<!-- Compile the java code from ${srcLANG_EVOL} into ${buildLANG_EVOL} /bin -->
		<javac srcdir="${srcLANG_EVOL}" destdir="${buildLANG_EVOL}" classpathref="classpath" 
		       fork="true"
		       memoryinitialsize="256m"
		       memorymaximumsize="256m"
               src='1.6' target='1.6'>
			<include name="beast/**/**" />
			<include name="dr/**/**" />
			<!-- compile JUnit test classes -->
			<include name="test/**" />
		</javac>
		<echo message="Successfully compiled." />
	</target>

	<!-- make the beast.jar and beauti.jar -->
	<target name="dist_all_LANG_EVOL" depends="compile-allLANG_EVOL" description="create LANG_EVOL jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${distLANG_EVOL}" />

		<!-- Put everything in ${buildLANG_EVOL} into the beast.jar file -->
		<jar jarfile="${distLANG_EVOL}/LANG_EVOL.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main_class_BEAST}" />
			</manifest>
			<fileset dir="${buildLANG_EVOL}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${beast2classpath}">
				<include name="beast/**/*.class" />
				<include name="beast/**/*.properties" />
				<include name="beast/**/*.png" />
				<include name="beagle/**/*.class" />
				<include name="org/**/*.class" />
			</fileset>
			<fileset dir="${beastiiclasspath}">
				<include name="beast/**/*.class" />
			</fileset>
			<zipgroupfileset dir="${libBeast2}" includes="jam.jar" />
			<zipgroupfileset dir="${libBeast2}" includes="beagle.jar" />
			<zipgroupfileset dir="${libBeast2}" includes="itextpdf-5.2.1.jar" />
			<zipgroupfileset dir="${libBeast2}" includes="colt.jar" />
			<zipgroupfileset dir="${libBeast2}" includes="commons-math3-3.1.1.jar" />
			<zipgroupfileset dir="${libLANG_EVOL}" includes="mtj.jar"/>
		</jar>
		<jar jarfile="${distLANG_EVOL}/LANG_EVOL.src.jar">
			<fileset dir="${srcLANG_EVOL}">
				<include name="beast/**/*.java" />
				<include name="beast/**/*.png" />
				<include name="beast/**/*.xsl" />
			</fileset>
        </jar>
		<jar jarfile="${distLANG_EVOL}/LANG_EVOL.addon.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
			<fileset dir="${buildLANG_EVOL}">
				<include name="beast/**/*.class" />
				<include name="dr/**/*.class" />
				<include name="util/**/*.class" />
				<include name="**/*.properties" />
			</fileset>
		</jar>
	</target>

	<!-- run beast.jar -->
	<target name="run_LANG_EVOL">
		<java jar="${distLANG_EVOL}/LANG_EVOL.jar" fork="true" />
	</target>

	
	<!-- JUnit test -->
	<target name="junitLANG_EVOL">
		<mkdir dir="${report}" />
		<junit printsummary="yes"> <!--showoutput='yes'-->
			<classpath>
				<path refid="classpath" />
				<path location="${buildLANG_EVOL}" />
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${report}">
				<fileset dir="${srcLANG_EVOL}">
                    <include name="test/**/*Test.java"/>                                         
                    <!--exclude name="test/**/beauti/*Test.java"/-->
				</fileset>
<!--
				<fileset dir="${srcBeast2}">
                    <include name="test/beast/integration/**/*Test.java"/>                                         
                    <exclude name="test/beast/integration/**/ResumeTest.java"/>                                         
				</fileset>
-->
			</batchtest>
		</junit>
		<echo message="JUnit test finished." />
	</target>
    
    <target name="junitreport">
		<junitreport todir="${report}">
			<fileset dir="${report}" includes="*.xml"/>
			<report format="frames" todir="${report}"/>
		</junitreport>
		<echo message="JUnit test report finished." />
	</target>


	<target name="addon"
	        depends="build_jar_all_LANG_EVOL_NoJUnitTest"
	        description="release BEAST 2 add-on version of LANG_EVOL">

		<delete dir="${Add_on_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Add_on_dir}" />
		<mkdir dir="${Add_on_dir}/lib" />
		<mkdir dir="${Add_on_dir}/examples" />
		<mkdir dir="${Add_on_dir}/examples/nexus" />
		<mkdir dir="${Add_on_dir}/templates" />

		<copy todir="${Add_on_dir}">
			<fileset file="version.xml"/>
		</copy>
		<copy todir="${Add_on_dir}/examples">
			<fileset dir="examples" includes="*.xml"/>
		</copy>
		<copy todir="${Add_on_dir}/lib">
			<fileset dir="${distLANG_EVOL}" includes="LANG_EVOL.addon.jar" />
		</copy>
		<copy todir="${Add_on_dir}">
			<fileset dir="${distLANG_EVOL}" includes="LANG_EVOL.src.jar" />
		</copy>
		<copy todir="${Add_on_dir}/templates">
			<fileset file="templates/SDollo.xml" />
			<fileset file="templates/BinaryCTMC.xml" />
			<fileset file="templates/BinaryCovarion.xml" />
		</copy>
		<jar jarfile="${distLANG_EVOL}/LANG_EVOL.addon.v${version}.zip">
			<fileset dir="${Add_on_dir}">
				<include name="**/*" />
			</fileset>
        </jar>
		<echo message="Add-on version v${version} release is finished." />
	</target>

	<target name="tutorial">
		<!-- generate images -->
		<junit printsummary="yes"> 
			<classpath>
				<path refid="classpath" />
				<path location="${buildLANG_EVOL}" />
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${report}">
				<fileset dir="${srcLANG_EVOL}">
                    <include name="test/**/beauti/*Test.java"/>                                         
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="tutorial2">
		<!-- generate discrete phylogeography AR.pdf -->
		<exec executable="sh" dir="doc/tutorial/phylogeography_discrete">
			<arg value='-c'/>
			<arg value='pdflatex AR.tex'/>
		</exec>
		<exec executable="sh" dir="doc/tutorial/phylogeography_discrete">
			<arg value='-c'/>
			<arg value='bibtex AR.aux'/>
		</exec>
		<exec executable="sh" dir="doc/tutorial/phylogeography_discrete">
			<arg value='-c'/>
			<arg value='pdflatex AR.tex'/>
		</exec>
		<exec executable="sh" dir="doc/tutorial/phylogeography_discrete">
			<arg value='-c'/>
			<arg value='pdflatex AR.tex'/>
		</exec>

		<!-- generate continuous phylogeography phylogeography_s.pdf -->
		<exec executable="sh" dir="doc/tutorial/phylogeography_continuous">
			<arg value='-c'/>
			<arg value='pdflatex phylogeography_c.tex'/>
		</exec>
		<exec executable="sh" dir="doc/tutorial/phylogeography_continuous">
			<arg value='-c'/>
			<arg value='bibtex phylogeography_c.aux'/>
		</exec>
		<exec executable="sh" dir="doc/tutorial/phylogeography_continuous">
			<arg value='-c'/>
			<arg value='pdflatex phylogeography_c.tex'/>
		</exec>
		<exec executable="sh" dir="doc/tutorial/phylogeography_continuous">
			<arg value='-c'/>
			<arg value='pdflatex phylogeography_c.tex'/>
		</exec>
	</target>


</project>
